<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList2.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABI
        CgAAAk1TRnQBSQFMAgEBAwEAARABAAEQAQABGQEAARkBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFk
        AwABGQMAAQEBAAEgBQABEAEnKgADBwEKAyQBNANbAZMD4AH2GP8D4gH2A10BlQMkATQDCAELLAADBwEK
        AyQBNANQAYMD1gHxGP8D1AHwA04BgQMkATQDCAELMAADDwEUAyMBMwNOAYQD/hn/A80B7wNJAXUDJAE0
        jAADCwEPA1UBhTD/A1YBhgMNAREkAAMHAQkDVQGFMP8DVgGGAwQBBigAAxABFQNsAaED9gH9LP8DQQFn
        AxUBHYAAA0ABZgNwAag4/wNyAasDQQFpHAADOQFbA2wBojj/A2sBoAM1AVQgAAMcASgDeQGuEP8D7wH7
        A38BtwNBAWYDQQFmA5MB0RT/A3sBtgM7AVx4AANAAWcDwgHnQP8DxQHpA0IBahQAAzsBXgOzAeFA/wOp
        AdsDNgFVGAADIwE0A6sB2Qz/A9MB8QMkATQDIgEyAxQBGwgAAxoBJAMjATMDNAFSA5UBzAz/A5wB0gMm
        ATlwAAMNARIDcgGrSP8DdAGuAxABFQwAAwkBDANsAaVI/wNrAaEDBgEIEAADAQECA50Bywz/A0EBZygA
        A50Bygz/A0EBZ2wAAwcBCgNVAYVQ/wNWAYYDCAELBAADBwEKA1UBhVD/A1YBhgMIAQsIAAMMARADcwGp
        CP8D5wH1A04BejAAA38BugOdAcsDTgF7cAADIwEzIP8DZQGZNP8DJAE0BAADIwEzFP8D9wH9A40BwANk
        AZgY/wNkAZgDjwHBA/oB/hT/AyQBNAgAAzkBWQPYAfII/wNOAXqwAANmAZ8Y/wOdAdQDSgF2BAA0/wNq
        AaIEAANjAZoQ/wP+Af8DiwG/AxwBJwQAA0ABZRD/A0EBZgQAAxwBKAONAcAD/hH/A1oBkQQAAwQBBQNJ
        AXYI/wPeAfa0AAPsAfoU/wN9AbEDHAEnAwQBBgQANP8D7wH7BAAD5wH4FP8DZQGZDAADOwFcCP8DOwFc
        DAADZAGYFP8D3wH1BAADHgErA8UB5gj/AyIBMbQAFP8DnQHLEAAD+wH+A/sB/gj/A/sB/gP7Af4D+wH+
        BP8D+wH+A/sB/hD/BAAY/wP9Af8DQQFnDAADQQFmA0EBZwwAA0EBZxz/BAADIwEzDP8DAAEBtAAQ/wOd
        AcscAANkAZgE/wMABAEBAgNEAWwE/wMkATQEABD/BAAc/wP3Af0DOwFcGAADOwFcA/oB/hz/BAADIwEz
        CP8DvAHiAwABAbQADP8DeAGtAwABARwAA2QBmAT/AwAEAQECA0QBbAT/AyQBNAQAEP8EACT/A0EBZxAA
        A0EBZiT/BAADIwEzCP8DPAFhuAAM/wN2AasDAAEBHAADZAGYBP8DAAQBAQIDRAFsBP8DJAE0BAAQ/wQA
        JP8DQQFmEAADQAFlJP8EAAMjATMI/wM6AV64AAz/A/oB/gOfAcwcAANkAZgE/wMABAEBAgNEAWwE/wMk
        ATQEABD/BAAg/wM7AVwYAAM7AVwg/wQAAyMBMwj/A58B1AMAAQG0ABT/A58BzAMAAQEMADj/BAAc/wNB
        AWcMAANBAWcDQgFoDAADQQFmHP8EAAMjATMM/wMAAQG0AAP3Af0U/wN7Aa8DFgEfAwIBAwQANP8D/gH/
        BAAD+QH+EP8D+wH+A2MBlwwAAzsBXAj/AzsBXQwAA2MBlwP+Ef8D7wH7BAADIAEuA9MB7wj/Ax4BK7QA
        A3EBpxj/A4YBwANEAW0EADT/A3cBrAQAA3MBqRD/A/cB/QNyAawDEQEXBAADQQFmA/oB/gj/A/kB/gNB
        AWcEAAMUARsDeAGxA/oB/hD/A2wBowQAAwoBDgNaAZEI/wOzAeQoAAMBAQIDHwEtA0EBZwNBAWcDQQFn
        A0EBZwNBAWcDJQE3AwMBBGgAAyMBMxz/A+8B+wNmAZo0/wMkATQEAAMjATMU/wPOAe0DbgGoA2MBlhT/
        A/0B/wNjAZcDcwGtA9YB8RT/AyQBNAgAA0ABZAP2Af0I/wNOAXskAAMXASADlAHGFP8DoAHQAxoBJGgA
        AwcBCgNVAYRQ/wNVAYUDBwEKBAADBwEKA1UBhBT/A/IB/AP6Af4Y/wP6Af4D9gH9FP8DVQGFAwcBCggA
        Aw8BFAN4AawI/wPnAfUDTgF7IAADIwEzHP8DJAE0bAADHgErA4cBw0j/A5EBzAMjATMMAAMhATADjgHJ
        SP8DhAHAAxwBJxAAAwUBBwOgAc4M/wNCAWgcAAMHAQoDUQGEGP8DJAE0cAADSwF3A+AB80D/A+IB8wNN
        AXkUAANMAXgD4QHzQP8D3wHyA0oBdhgAA0gBdwPhAfYM/wNaAZQDJAE0Ax4BKwMDAQQMAAMiATIDJQE3
        A3sBsBT/AyQBNHQAA0sBdgOQAcw4/wOXAdEDTQF5HAADTAF4A5UBzzj/A44ByQNLAXcgAANOAX8DgwG6
        EP8DxQHlA0gBcgNBAWcDQQFnA0EBZwPrAfoQ/wP5Af4I/wMkATR4AAMjATMDVQGEMP8DVQGFAyYBOCQA
        AyQBNgNVAYQw/wNVAYUDIQEwKAADGAEhA24BozD/A0EBZgOKAcoI/wMkATR8AAMHAQoDIwEzA3gBrSD/
        A3gBrQMjATMDBwEKLAADBwEKAyMBMwN4Aa0c/wP6Af4DeAGtAyMBMwMHAQowAAMPARQDIwEzA58BziD/
        A1UBhQMjATMEAAMxAUsI/wMkATSQAAMQARYDPwFrAywBRAMHAQlUAAMQARYDQAFsAyoBQQMGAQhYAAMR
        ARcDPgFoAzwBZRwAAyEBMAMiATFoAAFCAU0BPgcAAT4DAAEoAwABZAMAARkDAAEBAQABAQUAAZABARYA
        A/8BAAH8AQABDwH+AQABBwH/AYABAwHgBgAB+AEAAQcB/AEAAQMB/wIAAeAGAAHwAQABAwH4AQABAQH+
        AgABYAYAAeABAAEBAfACAAH8AQEBgAEgBgABwAIAAeACAAF4AR8B+AEgBgABgAIAAUACAAEwAT8B/AFg
        BgABgAIAAUACAAEwAX8B/wHgBgABgAEgAQABQAEgAUABIAL/AeAGAAGAASABAAFAAXAB4AEgAv8B4AYA
        AYEB4AEAAUABOQHAASAC/wHgBgABgwH4AQgBQAEfAYABIAL/AeAGAAGDAfgBCAFAAQ8BAAEhAv8B4AYA
        AYMB+AEIAUABDwEAASEC/wHgBgABgwH4AQgBQAEfAYABIAL/AeAGAAGAAeABAAFAATkBwAEgAv8B4AYA
        AYABIAEAAUABcAHgASAC/wHgBgABgAEgAQABQAEgAUABIAH/AcAHAAGAAgABQAIAATABfwHABwABgAIA
        AUACAAEwAT8BwAcAAcACAAHgAgABeAEfAcAHAAHgAQABAQHwAgAB/AEBAcAHAAHwAQABAwH4AQABAQH+
        CQAB+AEAAQcB/AEAAQMB/wkAAfwBAAEPAf4BAAEHAf8BgAECBwAB/wHhAv8B8AL/AfwBfwEgBgAL
</value>
  </data>
</root>