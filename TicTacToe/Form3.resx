<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList2.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABE
        CgAAAk1TRnQBSQFMAgEBAwEAAQgBAAEIAQABGQEAARkBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFk
        AwABGQMAAQEBAAEgBQABEAEnKgADCAEKAywBNAN5AZMD6gH2GP8D7AH2A30BlQMsATQDCQELLAADCAEK
        AywBNANoAYMD5AHxGP8D4wHwA2UBgQMsATQDCQELMAADEAEUAysBMwNhAYQD/hn/A90B7wNjAXUDLAE0
        jAADCwEPA3kBhTD/A3oBhgMNAREkAAMHAQkDeQGFMP8DegGGAwQBBigAAxEBFQOVAaED+QH9LP8DXAFn
        AxYBHYAAA1MBZgOVAag4/wOXAasDVgFpHAADRwFbA5IBojj/A5IBoAM/AVQgAAMdASgDowGuEP8D9QH7
        A6UBtwNbAWYDWwFmA60B0RT/A58BtgNRAVx4AANUAWcD1gHnQP8D2gHpA1gBahQAA0oBXgPLAeFA/wPD
        AdsDQQFVGAADJQE0A8kB2Qz/A+AB8QMsATQDKgEyAxYBGwgAAxwBJAMsATMDQQFSA7QBzAz/A7sB0gMt
        ATlwAAMOARIDlgGrSP8DmAGuAxABFQwAAwkBDAOSAaVI/wORAaEDBgEIEAADAQECA8MBywz/A1wBZygA
        A8IBygz/A1wBZ2wAAwgBCgN5AYVQ/wN6AYYDCQELBAADCAEKA3kBhVD/A3oBhgMJAQsIAAMNARADmwGp
        CP8D8gH1A28BejAAA6IBugPDAcsDbwF7cAADLAEzIP8DjQGZNP8DLAE0BAADLAEzFP8D+gH9A7YBwAOM
        AZgY/wOMAZgDtwHBA/wB/hT/AywBNAgAA0sBWQPmAfII/wNvAXqwAAOKAZ8Y/wO4AdQDZgF2BAA0/wOP
        AaIEAAOEAZoQ/wP+Af8DswG/AyEBJwQAA1oBZRD/A1sBZgQAAyIBKAO2AcAD/hH/A3cBkQQAAwQBBQNk
        AXYI/wPoAfa0AAPzAfoU/wOlAbEDHwEnAwQBBgQANP8D9QH7BAAD8AH4FP8DjQGZDAADUQFcCP8DUQFc
        DAADjAGYFP8D6gH1BAADJAErA90B5gj/AykBMbQAFP8DwwHLEAAD/QH+A/0B/gj/A/0B/gP9Af4D/QH+
        BP8D/QH+A/0B/hD/BAAY/wP9Af8DXAFnDAADWwFmA1wBZwwAA1wBZxz/BAADLAEzDP8DAAEBtAAQ/wPD
        AcscAAOMAZgE/wMABAEBAgNeAWwE/wMsATQEABD/BAAc/wP6Af0DUQFcGAADUQFcA/wB/hz/BAADLAEz
        CP8D1AHiAwABAbQADP8DogGtAwABARwAA4wBmAT/AwAEAQECA14BbAT/AywBNAQAEP8EACT/A1wBZxAA
        A1sBZiT/BAADLAEzCP8DSQFhuAAM/wOeAasDAAEBHAADjAGYBP8DAAQBAQIDXgFsBP8DLAE0BAAQ/wQA
        JP8DWwFmEAADWgFlJP8EAAMsATMI/wNHAV64AAz/A/wB/gPEAcwcAAOMAZgE/wMABAEBAgNeAWwE/wMs
        ATQEABD/BAAg/wNRAVwYAANRAVwg/wQAAywBMwj/A7sB1AMAAQG0ABT/A8QBzAMAAQEMADj/BAAc/wNc
        AWcMAANcAWcDXQFoDAADWwFmHP8EAAMsATMM/wMAAQG0AAP6Af0U/wOkAa8DGQEfAwIBAwQANP8D/gH/
        BAAD+wH+EP8D/QH+A4sBlwwAA1EBXAj/A1IBXQwAA4sBlwP+Ef8D9QH7BAADJgEuA+MB7wj/AyMBK7QA
        A5gBpxj/A6gBwANdAW0EADT/A6ABrAQAA5sBqRD/A/oB/QOWAawDEgEXBAADWwFmA/wB/gj/A/sB/gNc
        AWcEAAMVARsDnQGxA/wB/hD/A5EBowQAAwsBDgN4AZEI/wPHAeQoAAMBAQIDJQEtA1wBZwNcAWcDXAFn
        A1wBZwNcAWcDLQE3AwMBBGgAAywBMxz/A/UB+wOPAZo0/wMsATQEAAMsATMU/wPgAe0DkQGoA4kBlhT/
        A/0B/wOLBJcBrQPlAfEU/wMsATQIAANYAWQD+QH9CP8DbwF7JAADGwEgA7oBxhT/A8AB0AMeASRoAAMI
        AQoDeAGEUP8DeQGFAwgBCgQAAwgBCgN4AYQU/wP3BPwB/hj/A/wB/gP5Af0U/wN5AYUDCAEKCAADEAEU
        A6EBrAj/A/IB9QNvAXsgAAMsATMc/wMsATRsAAMgASsDpgHDSP8DrwHMAyYBMwwAAyQBMAOrAclI/wOk
        AcADHQEnEAADBQEHA8UBzgz/A10BaBwAAwgBCgNsAYQY/wMsATRwAANpAXcD7QHzQP8D7wHzA2wBeRQA
        A2sBeAPuAfNA/wPsAfIDaAF2GAADWwF3A+sB9gz/A3MBlAMsATQDJAErAwMBBAwAAyoBMgMuATcDpAGw
        FP8DLAE0dAADaQF2A64BzDj/A7IB0QNsAXkcAANrAXgDsQHPOP8DqwHJA2kBdyAAA2cBfwOoAboQ/wPd
        AeUDYgFyA1wBZwNcAWcDXAFnA/IB+hD/A/sB/gj/AywBNHgAAyYBMwN4AYQw/wN5AYUDKgE4JAADKAE2
        A3gBhDD/A3kBhQMkATAoAAMaASEDmAGjMP8DWwFmA6YBygj/AywBNHwAAwgBCgMsATMDogGtIP8DogGt
        AywBMwMIAQosAAMIAQoDLAEzA6IBrRz/A/wB/gOgAa0DLAEzAwgBCjAAAxABFAMsATMDwQHOIP8DeQGF
        AywBMwQAAz4BSwj/AywBNJAAAxEBFgNEAWsDLgFEAwcBCVQAAxEBFgNFAWwDLAFBAwYBCFgAAxEBFwNE
        AWgDQAFlHAADJAEwAyQBMWgAAUIBTQE+BwABPgMAASgDAAFkAwABGQMAAQEBAAEBBQABkAEBFgAD/wEA
        AfwBAAEPAf4BAAEHAf8BgAEDAeAGAAH4AQABBwH8AQABAwH/AgAB4AYAAfABAAEDAfgBAAEBAf4CAAFg
        BgAB4AEAAQEB8AIAAfwBAQGAASAGAAHAAgAB4AIAAXgBHwH4ASAGAAGAAgABQAIAATABPwH8AWAGAAGA
        AgABQAIAATABfwH/AeAGAAGAASABAAFAASABQAEgAv8B4AYAAYABIAEAAUABcAHgASAC/wHgBgABgQHg
        AQABQAE5AcABIAL/AeAGAAGDAfgBCAFAAR8BgAEgAv8B4AYAAYMB+AEIAUABDwEAASEC/wHgBgABgwH4
        AQgBQAEPAQABIQL/AeAGAAGDAfgBCAFAAR8BgAEgAv8B4AYAAYAB4AEAAUABOQHAASAC/wHgBgABgAEg
        AQABQAFwAeABIAL/AeAGAAGAASABAAFAASABQAEgAf8BwAcAAYACAAFAAgABMAF/AcAHAAGAAgABQAIA
        ATABPwHABwABwAIAAeACAAF4AR8BwAcAAeABAAEBAfACAAH8AQEBwAcAAfABAAEDAfgBAAEBAf4JAAH4
        AQABBwH8AQABAwH/CQAB/AEAAQ8B/gEAAQcB/wGAAQIHAAH/AeEC/wHwAv8B/AF/ASAGAAs=
</value>
  </data>
</root>